# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YsX7AanJbSi0-gZfDZlYsBMwwVbMSUGt
"""

!pip install streamlit
!pip install pyngrok

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# 
# import streamlit as st
# import pandas as pd
# import numpy as np
# from sklearn.preprocessing import StandardScaler
# 
# # Load dataset
# def load_data():
#     # Replace 'data.csv' with the path to your dataset
#     data = pd.read_csv('data.csv')
#     return data
# 
# # Preprocess the data
# def preprocess_data(data):
#     # Convert all appropriate columns to numeric, ignoring non-numeric ones
#     numeric_cols = data.select_dtypes(include=['float64', 'int64']).columns
#     non_numeric_cols = data.select_dtypes(exclude=['float64', 'int64']).columns
# 
#     # Handle missing values for numeric columns
#     data[numeric_cols] = data[numeric_cols].fillna(data[numeric_cols].mean())
# 
#     # Handle missing values for non-numeric columns (fill with mode or specific value)
#     data[non_numeric_cols] = data[non_numeric_cols].fillna(data[non_numeric_cols].mode().iloc[0])
# 
#     # Normalize numeric data
#     scaler = StandardScaler()
#     data[numeric_cols] = scaler.fit_transform(data[numeric_cols])
# 
#     return data
# 
#     # Normalize data
#     scaler = StandardScaler()
#     numerical_cols = ['cycle_length', 'bleeding_duration', 'sleep_hours', 'stress_level', 'exercise_frequency']
#     data[numerical_cols] = scaler.fit_transform(data[numerical_cols])
# 
#     return data
# 
# # Provide personalized suggestions based on user input
# def provide_suggestions(user_input, data):
#     suggestions = []
# 
#     # Diet suggestion
#     if user_input['stress_level'] > 7:
#         suggestions.append("Try consuming magnesium-rich foods like leafy greens, nuts, and seeds to reduce stress.")
#     if user_input['exercise_frequency'] < 3:
#         suggestions.append("Incorporate more physical activity to help balance your hormones.")
# 
#     # Sleep-related suggestion
#     if user_input['sleep_hours'] < 7:
#         suggestions.append("Aim to get at least 7-8 hours of sleep to maintain hormonal balance.")
# 
#     return suggestions
# 
# # Main function to create Streamlit app
# def main():
#     st.title("Menstrual Health Chatbot")
# 
#     # Load and preprocess data
#     data = load_data()
#     processed_data = preprocess_data(data)
# 
#     st.subheader("Tell me about your current situation:")
# 
#     # User inputs
#     cycle_length = st.slider("Cycle Length (days)", 21, 35)
#     bleeding_duration = st.slider("Bleeding Duration (days)", 1, 7)
#     sleep_hours = st.slider("Sleep Hours per Night", 3, 12)
#     stress_level = st.slider("Stress Level (1-10)", 1, 10)
#     exercise_frequency = st.slider("Exercise Frequency per Week", 0, 7)
# 
#     # Create a dictionary of user inputs
#     user_input = {
#         'cycle_length': cycle_length,
#         'bleeding_duration': bleeding_duration,
#         'sleep_hours': sleep_hours,
#         'stress_level': stress_level,
#         'exercise_frequency': exercise_frequency
#     }
# 
#     # Generate suggestions based on user input
#     if st.button("Get Suggestions"):
#         suggestions = provide_suggestions(user_input, processed_data)
#         if suggestions:
#             st.write("Here are some suggestions for you:")
#             for suggestion in suggestions:
#                 st.write("- " + suggestion)
#         else:
#             st.write("No specific suggestions at this time.")
# 
# if __name__ == "__main__":
#     main()
#

from pyngrok import ngrok
import time

# Set your authtoken (replace with your own)
ngrok.set_auth_token("2nsBR03a37nO82hQQu6EnqM75Qw_5CkBTEkARHq1qHjbZWcep")

# Kill any existing tunnels
ngrok.kill()

# Run Streamlit in the background
!nohup streamlit run app.py &

# Wait for Streamlit to fully start before starting ngrok (this is important!)
time.sleep(5)  # Adjust time if needed

# Start ngrok after Streamlit has started
public_url = ngrok.connect(addr="8501")
print(f"Streamlit is live at {public_url}")

from google.colab import files
uploaded = files.upload()

# Make sure 'data.csv' is in the same folder

!cat nohup.out